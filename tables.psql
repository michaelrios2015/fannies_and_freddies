
CREATE TYPE istbaelig_type AS ENUM ('none', '15 year', '30 year');


CREATE TABLE IF NOT EXISTS fannies (
    cusip VARCHAR PRIMARY KEY,
    name VARCHAR,
    indicator VARCHAR,
    issuedate DATE,
    maturitydate DATE,
    originalface DOUBLE PRECISION,
    istbaelig istbaelig_type 
);


CREATE TABLE IF NOT EXISTS fanniebodies (
    cusip VARCHAR,
    coupon DOUBLE PRECISION,
    remainingbalance DOUBLE PRECISION,
    Factor DOUBLE PRECISION,
    gwac DOUBLE PRECISION,
    wam INTEGER,
    wala INTEGER,
    date DATE, 
    PRIMARY KEY (cusip, date)
);

-- going to add the current face in cmos to the fanniebodies table 
-- technically this is messing up the seperation thing but that is A OK

ALTER TABLE fanniebodies
ADD cfincmos DOUBLE PRECISION;

ALTER TABLE fanniebodies
ADD cfinplats DOUBLE PRECISION;

31360FCE3,5.926,7292.67,0.00027771,6.875,23,457,2021-12-01

Prefix|Security Identifier|CUSIP|Security Factor Date|Security Factor|Payment Delay Days|Security Data Correction Indicator|Security Status Indicator|Security Notification Indicator|Security Description|Issuer|Issue Date|Maturity Date|Updated Longest Maturity Date|Issuance Investor Security UPB|Current Investor Security UPB|WA Net Interest Rate|WA Issuance Interest Rate|WA Current Interest Rate|WA Net Accrual Interest Rate|WA Loan Term|WA Issuance Remaining Months to Maturity|WA Current Remaining Months to Maturity|WA Loan Age|WA Mortgage Loan Amount|Average Mortgage Loan Amount|WA Loan-To-Value (LTV)|WA Combined Loan-To-Value (CLTV)|WA Debt-To-Income (DTI)|WA Borrower Credit Score|Filler|Filler|Loan Count|Third Party Origination UPB Percent|Seller Name|Seller City|Seller State|Servicer Name|Servicer City|Servicer State|Delinquent Loans Purchased (Prior Month UPB)|Delinquent Loans Purchased (Loan Count)|Eligible for Resecuritization|Notes|Notes Ongoing|Interest Only Security Indicator|WA Months to Amortization|Prepayment Penalty Indicator|Reduced Minimum Servicing Indicator|Subtype|Index|WA Mortgage Margin|WA MBS PC Margin|Interest Rate Adjustment Frequency|Interest Rate Lookback|Payment Adjustment Frequency|Payment Lookback|Convertibility Indicator|Negative Amortization Indicator|Negative Amortization Factor|WA Negative Amortization Limit|Initial Fixed Rate Period|First Rate Adjustment Date|First Payment Adjustment Date|WA Months to Next Rate Adjustment Date|WA Life Interest Rate Ceiling|WA Net Life Interest Rate Ceiling|WA Life Interest Rate Floor|WA Net Life Interest Rate Floor|Initial Interest Rate Cap Up %|Initial Interest Rate Cap Down %|Periodic Interest Rate Cap Up %|Periodic Interest Rate Cap Down %|Initial Step Fixed-Rate Period|Step Rate Adjustment Frequency|Next Step Rate Adjustment Date|WA Months to Next Step Rate Adjustment|Periodic Step Rate Cap Up %|WA Origination Mortgage Loan Amount|Average Origination Mortgage Loan Amount|WA Origination Interest Rate|WA Origination Loan Term|WA Origination Loan-To-Value (LTV)|WA Origination Combined Loan-To-Value (CLTV)|WA Origination Debt-To-Income (DTI)|WA Origination Credit Score|Filler|Filler|Origination Third Party Origination UPB Percent|WA Estimated Loan-To-Value (ELTV)|WA Updated Credit Score
AS|
004569|
31360FCE3|
122021|
0.00027771|
55|
N|
A|
7|
FNAR XX.XXX AS004569|
FNM|
07011984|
112023|
112023|
26260359.00|
7292.67|
5.926|
12.176|
6.875|
5.926|
480|
381|
23|
457|
63000.00|
63000.00|
||||||1||WASHINGTON MUTUAL BANK, FA|||JPMORGAN CHASE BANK, NATIONAL ASSOCIATION|COLUMBUS|OH|0.00|0|Y||The Interest Rate Adjustment Date has been revised which may also impact the index for this security.|N||N|N|1A F|021|2.199|1.250|1|15|12|0|N|Y|0.00000000|999.999|00|051984|121984|1|16.875|15.926|6.875|5.926|77.777|77.777|77.777|77.777||||||||||||||||||


CREATE TABLE IF NOT EXISTS freddies (
    cusip VARCHAR PRIMARY KEY,
    name VARCHAR,
    indicator VARCHAR,
    issuedate DATE,
    maturitydate DATE,
    originalface DOUBLE PRECISION,
    istbaelig istbaelig_type 
);


CREATE TABLE IF NOT EXISTS freddiebodies (
    cusip VARCHAR,
    coupon DOUBLE PRECISION,
    remainingbalance DOUBLE PRECISION,
    Factor DOUBLE PRECISION,
    gwac DOUBLE PRECISION,
    wam INTEGER,
    wala INTEGER,
    date DATE, 
    PRIMARY KEY (cusip, date)
);


cusip,name,indicator,issuedate,maturitydate,originalface,istbaelig
31296JAA4,A10001,A1,2003-06-01,2033-06-01,1155395.0,none

cusip,coupon,remainingbalance,factor,gwac,wam,wala,date
31296JAA4,5.500,85053.73,0.07361442,5.875,89,222,2012-12-01

A1|
A10001|
31296JAA4|
122021|
0.07361442|
45|
Y|
A|
7|
FGPC 05.5000 A1-A10001|
FRE|
06012003|
062033|
062033|
1155395.00|
85053.73|
5.500|
5.875|
5.875|
|
360|
360|
89|
222|
200000.00|
200000.00|
62|
|
|
656|
|
|
1||TAYLOR, BEAN & WHITAKER MORTGAGE CORP.|OCALA|FL|NATIONSTAR MORTGAGE LLC|COPPELL|TX|0.00|0|Y|||N||N|N||||||||||||||||||||||||||||||||||||||||||


CREATE TABLE IF NOT EXISTS ecs (
    fdonename VARCHAR, 
    fdonecusip VARCHAR,
    fdtwoname VARCHAR, 
    fdtwocusip VARCHAR,
    exchangeable DOUBLE PRECISION,
    exchanged DOUBLE PRECISION,
    date DATE, 
    -- I think we just need thes two 
    PRIMARY KEY (fdonecusip, date)
);

\COPY eas FROM 'C:/Users/micha/fannieandfreddie/cvs_readers/data/input/ec220204.txt' delimiter '|' csv header;

-- testing some eas stuff

SELECT *
FROM freddies
INNER JOIN eas
ON freddies.cusip = eas.fdonecusip
WHERE freddies.originalface = eas.exchangeable
AND exchangeable != exchanged
AND exchanged > 0
LIMIT 4;

-- certainly looks like exchangeable is the same as the freddie one current face 

SELECT COUNT(*)
FROM eas
WHERE exchangeable != exchanged
AND exchanged > 0;

-- so ones where not everything is exchanged exisits 


SELECT *
FROM eas
WHERE exchangeable != exchanged
AND exchanged > 0
LIMIT 5;

SELECT *
FROM eas
WHERE exchangeable < exchanged;


-- so I was going to make a table that would hold both fannies and the mirrors
-- I was going to have an eadate ... so I have no idea if it makes more sense to have two
-- tables or one going to have two for now

-- so these will just hold the mirror and we will need to combine it with the regular fannies 
-- later 

CREATE TABLE IF NOT EXISTS fanniemirrors (
    cusip VARCHAR,
    name VARCHAR,
    indicator VARCHAR,
    issuedate DATE,
    maturitydate DATE,
    originalface DOUBLE PRECISION,
    istbaelig istbaelig_type,
    ecdate date,
    PRIMARY KEY (cusip, ecdate) 
);


CREATE TABLE IF NOT EXISTS fanniemirrorbodies (
    cusip VARCHAR,
    coupon DOUBLE PRECISION,
    remainingbalance DOUBLE PRECISION,
    Factor DOUBLE PRECISION,
    gwac DOUBLE PRECISION,
    wam INTEGER,
    wala INTEGER,
    date DATE,
    ecdate date, 
    PRIMARY KEY (cusip, date, ecdate)
);

ALTER TABLE fanniemirrorbodies
ADD cfincmos DOUBLE PRECISION;

ALTER TABLE fanniemirrorbodies
ADD cfinplats DOUBLE PRECISION;

------------------------------------------------------------------
--- working on the freddies part

-- this will hold the freddies that are not in the ec file so are neither mirrored or mirrors
-- i think it needs a date because it should be slowly shrinking so the date just says this had nothing to do with the fannies
-- on that day so seems good.. i mean we could just truncate them each time and it would probably be fine

CREATE TABLE IF NOT EXISTS freddieswithoutmirrors (
    cusip VARCHAR,
    name VARCHAR,
    indicator VARCHAR,
    issuedate DATE,
    maturitydate DATE,
    originalface DOUBLE PRECISION,
    istbaelig istbaelig_type,
    ecdate date,
    PRIMARY KEY (cusip, ecdate) 
);

CREATE TABLE IF NOT EXISTS freddiebodieswomirrors (
    cusip VARCHAR,
    coupon DOUBLE PRECISION,
    remainingbalance DOUBLE PRECISION,
    Factor DOUBLE PRECISION,
    gwac DOUBLE PRECISION,
    wam INTEGER,
    wala INTEGER,
    date DATE,
    ecdate date, 
    PRIMARY KEY (cusip, date, ecdate)
);

ALTER TABLE freddiebodieswomirrors
ADD cfincmos DOUBLE PRECISION;

ALTER TABLE freddiebodieswomirrors
ADD cfinplats DOUBLE PRECISION;

-----------------------------------------------------------------

-- a temp table that I can put the super, giants, etc

CREATE TEMP TABLE platinumreader (
    platcusip VARCHAR,
    prefix VARCHAR,
    securityid VARCHAR,
    poolcusip VARCHAR,
    interestrate DOUBLE PRECISION,
    issuer VARCHAR,
    issuedate DATE,
    maturitydate INTEGER,
    ciisu DOUBLE PRECISION,
    ofinplat DOUBLE PRECISION, 
    PRIMARY KEY (platcusip, poolcusip)

)

-- reading them in to see if primary key works

\copy platinumreader FROM 'C:\Users\micha\Downloads\collateral_items_giant_FHR.csv' DELIMITER ',' CSV HEADER

\copy platinumreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\input\collateral_items_mega_FNM.csv' DELIMITER ',' CSV HEADER

\copy platinumreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\input\collateral_items_super_FHR.csv' DELIMITER ',' CSV HEADER

\copy platinumreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\input\collateral_items_super_FNM.csv' DELIMITER ',' CSV HEADER


----so this did not completely work because across the four files the platcusip, and poolcusip are not unique (close I think)

-- but we have some in there so let's see what we need to do to sum ofinplat by poolcusip

SELECT COUNT(*)
FROM platinumreader;

 1490859

 
SELECT COUNT(DISTINCT poolcusip)
FROM platinumreader;

 578588

-- so this works fine and mostly I just don't like having a table without a good primary key
-- the poolcusip and a date will be a primary key... 

-- I will probably just need to be careful about making sure I never rerun it by accident....
-- maybe I can have a column that says how many times I have run it... and it should never be more than 4

SELECT 
    poolcusip,
    SUM(ofinplat)
FROM platinumreader
GROUP BY poolcusip
LIMIT 10;


CREATE TEMP TABLE sumoforigface (
    poolcusip VARCHAR,
    ofinplat DOUBLE PRECISION, 
)


SELECT 
    poolcusip,
    SUM(ofinplat) AS ofinplat
INTO TEMP TABLE sumoforigface
FROM platinumreader
GROUP BY poolcusip;

INSERT INTO sumoforigface
SELECT 
    poolcusip,
    SUM(ofinplat) AS ofinplat
FROM platinumreader
GROUP BY poolcusip;


SELECT
    poolcusip,
    COUNT(*)
FROM sumoforigface
GROUP BY poolcusip
HAVING COUNT(*) > 3
LIMIT 10;

--  so I guess this guy was in all four files 

 poolcusip | ofinplat
-----------+----------
 3132A9SK4 |  5407000
 3132A9SK4 |  4942000
 3132A9SK4 |  5407000
 3132A9SK4 |  4942000

 ---------------------
--  trying the same thing with update on conflict

TRUNCATE platinumreader;

CREATE TEMP TABLE sumoforigfacetwo (
    poolcusip VARCHAR,
    ofinplat DOUBLE PRECISION,
    PRIMARY KEY (poolcusip) 
)

-- I could not get this to work... so trying a different approach 3/12/22
INSERT INTO sumoforigfacetwo
SELECT 
    poolcusip,
    SUM(ofinplat) AS ofinplat
FROM platinumreader
GROUP BY poolcusip
ON CONFLICT (poolcusip)
DO 
    UPDATE SET ofinplat = sumoforigfacetwo.ofinplat + platinumreader.ofinplat
    FROM platinumreader
    WHERE sumoforigfacetwo.poolcusip = platinumreader.poolcusip;

------------------------------

-- just calling this platinums for the monent because I got so used to thinking
-- about the big ones as platinums

-- so it turns out we are only supposed to have one pool plat cusip combo so the file name is not need
-- but the date could be useful 

CREATE TABLE platinums (
    platcusip VARCHAR,
    poolcusip VARCHAR,
    ofinplat DOUBLE PRECISION, 
    date DATE,
    PRIMARY KEY (platcusip, poolcusip)
);



CREATE TEMP TABLE  platinumsreader (
    platcusip VARCHAR,
    poolcusip VARCHAR,
    ofinplat DOUBLE PRECISION, 
    date DATE
);


-- seems to work

\copy platinumsreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\output\giant_FHR' DELIMITER ',' CSV HEADER

\copy platinumsreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\output\mega_FNM' DELIMITER ',' CSV HEADER

\copy platinumsreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\output\super_FHR' DELIMITER ',' CSV HEADER

\copy platinumsreader FROM 'C:\Users\micha\fannieandfreddie\cvs_readers\data\output\super_FNM' DELIMITER ',' CSV HEADER

INSERT INTO platinums
SELECT * 
FROM platinumsreader
ON CONFLICT
DO NOTHING;

TRUNCATE platinumsreader;

INSERT 0 0

SELECT COUNT(*)
FROM(
    SELECT distinct platcusip, poolcusip
    FROM platinumsreader
) AS foo;


-- this is the straight count  2712702


-- this is distinct 
--  1571434 --- 


-- got the same thing as last time so that's good :)
SELECT 
    poolcusip,
    filename,
    SUM(ofinplat) AS ofinplat
FROM platinums
WHERE poolcusip = '3132A9SK4'
GROUP BY poolcusip, filename;

 poolcusip | filename  | ofinplat
-----------+-----------+----------
 3132A9SK4 | giant_FHR |  5407000
 3132A9SK4 | mega_FNM  |  4942000
 3132A9SK4 | super_FHR |  5407000
 3132A9SK4 | super_FNM |  4942000

 SELECT 
    COUNT(DISTINCT poolcusip)
FROM platinums;


---------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-- this table is a bit redunant (not N normalized) but that is ok 

CREATE TABLE fannieofinplat (
    cusip VARCHAR,
    ofinplat DOUBLE PRECISION,
    currfaceinplat DOUBLE PRECISION,
    fanniefloat DOUBLE PRECISION, 
    date DATE,
    PRIMARY KEY (cusip, date)
);



CREATE TABLE freddiesofinplat (
    cusip VARCHAR,
    ofinplat DOUBLE PRECISION,
    currfaceinplat DOUBLE PRECISION,
    fanniefloat DOUBLE PRECISION, 
    date DATE,
    ecdate DATE,
    PRIMARY KEY (cusip, date, ecdate)
);


--------------------------------------

--  we need to the unique original face in cmo table 
-- well I see no freedies or fannies in the cmos I imported from  
-- OK so they get there own cmos.. which I might deal with tomorrow 

CREATE TABLE uniqueofincmos (
    cmo VARCHAR,
    cusip VARCHAR,
    faceincmo DOUBLE PRECISION,
    date DATE,
    collapsed DATE,
    PRIMARY KEY (cmo, cusip, date)
);

SELECT * 
FROM uniqueofincmos
INNER JOIN fannies
ON uniqueofincmos.cusip = fannies.cusip
LIMIT 5;

SELECT * 
FROM uniqueofincmos
INNER JOIN freddies
ON uniqueofincmos.cusip = freddies.cusip
LIMIT 5;

-- so my hope that I can just bring in the unique of in cmos from ginnies has been dashed
-- so in the ginnies when I first bring in the cmos there is no primary key except a number
--  I do not know if this is the case also don't know if date applies presummably it does.. is it imporant 
-- IDK 


cmos_builder=# SELECT  * FROM ofincmos LIMIT 2;
 id |    cmo     |   cusip   | faceincmo |    date
----+------------+-----------+-----------+------------
  1 | 1999-004-1 | 36202C6Y4 |  14234984 | 2021-06-01
  2 | 1999-004-1 | 36202C7L1 |   2772583 | 2021-06-01


--  going to be optimistic
CREATE TABLE ofincmos (
    cmo VARCHAR,
    cusip VARCHAR,
    faceincmo DOUBLE PRECISION,
    PRIMARY KEY (cmo, cusip)
);

--  so the hop that PRIMARY KEY (cmo, cusip) could work has fallen apart 2019-042-1, 3140J9MK4
-- so looks like it is just one double
2019-042-1,3140J9MK4,305599278.0

2019-042-1,3140J9MK4,305599278.0


2019-042,1,3140J9MK4,305599278.0

-- This is a mistake there should be only one but is that always the case?? 

line 227,644
2019-042,1,3140J9MK4,BM4861,FNM,CL,4.5,2018-11-01,012048,307838959.0,305599278.0

line 227,735
2019-042,1,3140J9MK4,BM4861,FNM,CL,4.5,2018-11-01,012048,307838959.0,305599278.0