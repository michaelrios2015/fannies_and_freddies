-- stolem from the regular fannie one

    SELECT 
        f.cusip,
        f.name,
        f.indicator,
        f.issuedate,
        f.maturitydate,
        e.exchanged AS originalface,
        e.date
    FROM ecs e
    INNER JOIN freddieplats f
    ON e.fdtwocusip = f.cusip
    -- so this would need to be updated each time 
    WHERE e.date = '2022-02-03'
    LIMIT 2;

-- we don't have the tba eligible but that  is 
create or replace PROCEDURE fannieplatmirrors(ecsdate DATE)
language plpgsql
as
$$
declare
begin

    INSERT INTO fannieplatmirrors
    SELECT 
        f.cusip,
        f.name,
        f.indicator,
        f.issuedate,
        f.maturitydate,
        e.exchanged AS originalface,
        e.date
    FROM ecs e
    INNER JOIN freddieplats f
    ON e.fdtwocusip = f.cusip
    -- so this would need to be updated each time 
    WHERE e.date = ecsdate;

end;

$$;

fannieplatmirrors(ecsdate DATE)

CALL fannieplatmirrors('2022-02-03');



SELECT 
    COUNT(*)
FROM ecs
INNER JOIN freddieplats
ON ecs.fdtwocusip = freddieplats.cusip
-- so this would need to be updated each time 
WHERE ecs.date = '2022-02-03';

-- seems to work

-- 

create or replace PROCEDURE fannieplatbodymirrors(ecsdate DATE, freddiebodiesdate DATE)
language plpgsql
as
$$
declare
begin

    DROP TABLE IF EXISTS currentecs, currentfreddies, currentfreddieswof; 
    -- make a drop if exists tables 

    CREATE TEMP TABLE currentecs AS
    SELECT 
        ecs.fdtwocusip,
        ecs.exchanged,
        ecs.date
    FROM  ecs
    WHERE ecs.date = ecsdate;


    -- gets us the freddiebodies for the month we need and also only picks the mirrors
    CREATE TEMP TABLE currentfreddies AS
    SELECT 
        f.cusip,
        f.coupon,
        f.remainingbalance,
        f.factor,
        f.gwac,
        f.wam,
        f.wala,
        f.date,
        f.istbaelig
    FROM  freddieplatbodies f
    -- this just limits it so it does not take forever in the next step
    INNER JOIN currentecs
    ON currentecs.fdtwocusip = f.cusip
    WHERE f.date = freddiebodiesdate;


    -- getting original face so we can compare it with exchanged
    CREATE TEMP TABLE currentfreddieswof AS
    SELECT
        currentfreddies.cusip,
        currentfreddies.coupon,
        freddieplats.originalface,
        currentfreddies.remainingbalance,
        currentfreddies.factor,
        currentfreddies.gwac,
        currentfreddies.wam,
        currentfreddies.wala,
        currentfreddies.date,
        currentfreddies.istbaelig
    FROM  currentfreddies
    -- this just limits it so it does not take forever in the next step
    INNER JOIN freddieplats
    ON freddieplats.cusip = currentfreddies.cusip;


    -- putting it all toget 
    INSERT INTO fannieplatmirrorbodies
    SELECT 
        currentfreddieswof.cusip,
        currentfreddieswof.coupon,
        -- check to see if all original face has been exchanged if so we can just use remaining balance
        -- if not we multiple the amount exchanged by the factor (we calculated)
        CASE 
            WHEN currentfreddieswof.originalface = currentecs.exchanged THEN currentfreddieswof.remainingbalance
            ELSE currentecs.exchanged * (currentfreddieswof.remainingbalance / currentfreddieswof.originalface)
            END AS remainingbalance,
        currentfreddieswof.factor,
        currentfreddieswof.gwac,
        currentfreddieswof.wam,
        currentfreddieswof.wala,
        currentfreddieswof.date,
        currentecs.date AS ecdate,
        currentfreddieswof.istbaelig
    FROM currentfreddieswof
    INNER JOIN currentecs
    ON currentfreddieswof.cusip = currentecs.fdtwocusip;

    -- make a drop if exists tables
    DROP TABLE IF EXISTS currentecs, currentfreddies, currentfreddieswof; 

end;

$$;

fannieplatbodymirrors(ecsdate DATE, freddiebodiesdate DATE)

CALL fannieplatbodymirrors('2022-02-03', '2022-02-04')


-- Seems to work 

SELECT *
FROM currentfreddies
INNER JOIN currenteas
ON currentfreddies.cusip = currenteas.fdtwocusip
LIMIT 10;

SELECT *
FROM currentfreddies
INNER JOIN eas
ON currentfreddies.cusip = eas.fdtwocusip
LIMIT 10;
